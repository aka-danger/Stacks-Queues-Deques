package SList;

public class SList<T> implements ISList<T> {

	private Node<T> head = null ;
	private Node<T> tail = null;
	private int size = 0;
	
	public SList(){
	
	}
	
	@Override
	//add last
	public void push(T element) {
		if(isEmpty()){
			head = new Node<T>(element, null);
			tail = head;
			size++;
		}else{
			Node<T> newNode = new Node<T>(element, null);
			tail.setNext(newNode);
			tail = newNode;
			size++;
		}
	}

	@Override
	//remove last and show the element
	public T pop() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public T top() {
		// TODO Auto-generated method stub
		return tail.getElement();
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return size;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return (size == 0);
	}
	
	public String toString(){
		String result = "";
		
		Node<T> i = head.getNext();
		while(i!= tail){
			result+= String.valueOf(i.getElement()) + " ";
			i =i.getNext();
		}
		return result;
	}

}
